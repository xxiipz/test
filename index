<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Chat with Tic Tac Toe</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
            background-color: #f0f0f0;
        }

        #chat-container {
            display: flex;
        }

        #chat-box {
            height: 300px;
            overflow-y: scroll;
            border: 1px solid #ccc;
            padding: 10px;
            margin-right: 20px;
            width: 300px;
        }

        #game-container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        #board {
            display: grid;
            grid-template-columns: repeat(3, 50px);
            grid-gap: 5px;
        }

        .cell {
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            cursor: pointer;
            background-color: #fff;
            border: 1px solid #ccc;
        }

        #message-input {
            margin-top: 10px;
        }

        .user-options {
            position: relative;
            display: inline-block;
        }

        .options-content {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            min-width: 160px;
            box-shadow: 0 8px 16px rgba(0,0,0,0.2);
            padding: 10px;
            z-index: 1;
        }

        .user-options:hover .options-content {
            display: block;
        }

        .options-content button {
            display: block;
            margin-top: 5px;
            padding: 5px;
            cursor: pointer;
            background-color: #4caf50;
            color: #fff;
            border: none;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div id="chat-container">
        <div id="chat-box"></div>
        <div id="game-container">
            <div id="board"></div>
            <div id="message-input">
                <input type="text" id="message" placeholder="Type your message">
                <button onclick="sendMessage()">Send</button>
            </div>
            <div class="user-options">
                <span id="username-options" onclick="toggleOptions()">Game Options â–¼</span>
                <div class="options-content">
                    <button onclick="playTicTacToe()">Play Tic Tac Toe</button>
                    <input type="color" id="colorPicker" value="#000000" onchange="changeColor()">
                </div>
            </div>
        </div>
    </div>

    <script>
        const socket = new WebSocket('ws://your-server-ip:8080');
        let username = localStorage.getItem('chat_username') || 'Guest';
        let userId = localStorage.getItem('chat_user_id') || '';
        let inGame = false;
        let gameRequestPending = false;
        let userColor = localStorage.getItem('chat_user_color') || '#000000';

        updateUsernameDisplay();

        socket.addEventListener('open', (event) => {
            console.log('WebSocket connection opened:', event);
        });

        socket.addEventListener('message', (event) => {
            const message = JSON.parse(event.data);

            if (message.gameRequest) {
                handleGameRequest(message.username, message.userId);
            } else if (message.gameState) {
                handleGameState(message.gameState);
            } else {
                displayMessage(message.username, message.message, message.color);
            }
        });

        function updateUsernameDisplay() {
            username = localStorage.getItem('chat_username') || 'Guest';
            userId = localStorage.getItem('chat_user_id') || '';
            document.getElementById('username-text').textContent = `${username} #${userId}`;
        }

        function sendMessage() {
            const messageInput = document.getElementById('message');
            const message = messageInput.value.trim();

            if (message !== '') {
                const data = {
                    username,
                    userId,
                    message,
                    inGame,
                    color: userColor,
                };

                socket.send(JSON.stringify(data));
                messageInput.value = '';

                // Display the user's own message
                displayMessage(username, message, userColor);
            }
        }

        function displayMessage(username, message, color) {
            const chatBox = document.getElementById('chat-box');
            const messageElement = document.createElement('div');
            messageElement.textContent = `${username}: ${message}`;
            messageElement.style.color = color;
            chatBox.appendChild(messageElement);
            chatBox.scrollTop = chatBox.scrollHeight;
        }

        function toggleOptions() {
            const optionsContent = document.querySelector('.options-content');
            optionsContent.style.display = optionsContent.style.display === 'block' ? 'none' : 'block';
        }

        function playTicTacToe() {
            if (!inGame && !gameRequestPending) {
                const data = {
                    username,
                    userId,
                    gameRequest: true,
                };

                socket.send(JSON.stringify(data));
                gameRequestPending = true;
            }
        }

        function handleGameRequest(requestingUsername, requestingUserId) {
            const acceptGame = confirm(`${requestingUsername}#${requestingUserId} wants to play Tic Tac Toe. Accept?`);
            
            const data = {
                username,
                userId,
                gameRequestResponse: true,
                acceptGame,
                requestingUserId,
            };

            socket.send(JSON.stringify(data));

            if (acceptGame) {
                inGame = true;
                gameRequestPending = false;
                initializeTicTacToe();
            } else {
                gameRequestPending = false;
            }
        }

        function initializeTicTacToe() {
            const board = document.getElementById('board');
            board.innerHTML = '';

            for (let i = 0; i < 9; i++) {
                const cell = document.createElement('div');
                cell.classList.add('cell');
                cell.dataset.index = i;
                cell.addEventListener('click', () => makeMove(i));
                board.appendChild(cell);
            }
        }

        function makeMove(index) {
            if (inGame) {
                const gameState = {
                    index,
                    marker: 'X', // You can alternate between X and O
                };

                const data = {
                    username,
                    userId,
                    gameState,
                };

                socket.send(JSON.stringify(data));
                handleGameState(gameState);
            }
        }

        function handleGameState(gameState) {
            const cell = document.querySelector(`.cell[data-index="${gameState.index}"]`);
            cell.textContent = gameState.marker;
        }

        function changeColor() {
            const colorPicker = document.getElementById('colorPicker');
            userColor = colorPicker.value;
            localStorage.setItem('chat_user_color', userColor);
        }
    </script>
</body>
</html>
